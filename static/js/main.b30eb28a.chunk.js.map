{"version":3,"sources":["images/icon-sun.svg","images/icon-moon.svg","components/Header.js","components/Input.js","images/icon-cross.svg","components/Task.js","components/Footer.js","components/NoTask.js","components/Drag.js","App.js","localStorage.js","index.js"],"names":["Header","theme","setTheme","clickHandler","document","body","classList","toggle","className","href","src","moon","onClick","alt","sun","Input","todo","setTodo","isChecked","setIsChecked","useState","value","setValue","type","checked","onChange","id","htmlFor","placeholder","spellCheck","e","target","onKeyDown","keyCode","trim","Math","random","text","completed","autoFocus","Task","provided","toggler","index","ref","innerRef","draggableProps","dragHandleProps","forEach","task","i","dupTodo","close","filteredTodo","filter","Footer","count","setFilters","allBtn","useRef","activeBtn","completedBtn","allBtns","innerHTML","activeChanger","btn","current","remove","add","NoTask","Drag","App","filters","setFilteredTodo","useEffect","localTodo","localStorage","getItem","localTheme","JSON","parse","retrive","setItem","stringify","save","length","useMemo","array","map","onDragEnd","useCallback","param","srcI","source","desI","destination","droppableId","snapshot","droppableProps","draggableId","ReactDOM","render","StrictMode","getElementById"],"mappings":"uMAAe,MAA0B,qCCA1B,MAA0B,sC,OCwB1BA,EApBA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAClBC,EAAe,WACLD,EAAL,KAAVD,EAAwB,QAAoB,IAC5CG,SAASC,KAAKC,UAAUC,OAAO,UAGhC,OACC,sBAAKC,UAAU,SAAf,UACC,mBAAGC,KAAK,mCAAmCD,UAAU,eAArD,SACC,oBAAIA,UAAU,eAAd,oBAEU,UAAVP,EACA,qBAAKS,IAAKC,EAAMC,QAAST,EAAcU,IAAI,aAAaL,UAAU,oBAElE,qBAAKE,IAAKI,EAAKF,QAAST,EAAcU,IAAI,aAAaL,UAAU,wBCkBtDO,EAlCD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACC,sBAAKd,UAAU,QAAf,UACC,uBACCe,KAAK,WACLC,QAASN,EACTO,SAAU,kBAAMN,GAAcD,IAC9BV,UAAU,2BACVkB,GAAG,oBAEJ,uBAAOC,QAAQ,kBAAkBnB,UAAU,gCAC3C,uBACCe,KAAK,OACLf,UAAU,mBACVoB,YAAY,uBACZC,WAAW,QACXJ,SAAU,SAACK,GAAD,OAAOR,EAASQ,EAAEC,OAAOV,QACnCW,UAxBgB,SAACF,GACnB,GAAkB,KAAdA,EAAEG,QAAgB,CACrB,GAAqB,KAAjBZ,EAAMa,OAAe,OAAOZ,EAAS,IACzCL,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAEU,GAAoB,IAAhBS,KAAKC,SAAkBC,KAAMhB,EAAOiB,WAAW,MACvEhB,EAAS,MAqBRD,MAAOA,EACPkB,WAAS,QC9BE,MAA0B,uCC0C1BC,EAxCF,SAAC,GAAoD,IAAlDd,EAAiD,EAAjDA,GAAIW,EAA6C,EAA7CA,KAAMrB,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASO,EAAwB,EAAxBA,QAASiB,EAAe,EAAfA,SAC7CC,EAAUlB,EACVmB,GAAS,EAiBb,OACC,0DACCnC,UAAU,OACVoC,IAAKH,EAASI,UACVJ,EAASK,gBACTL,EAASM,iBAJd,cAMC,uBACCxB,KAAK,WACLC,QAASkB,EACTjB,SA1BsB,WACxBiB,GAAWlB,EAEXR,EAAKgC,SAAQ,SAACC,EAAMC,GACfD,EAAKvB,KAAOA,IAAIiB,EAAQO,MAE7B,IAAMC,EAAO,YAAOnC,GACpBmC,EAAQR,GAAS,CAAEjB,KAAIW,OAAMC,UAAWI,GACxCzB,EAAQkC,IAmBN3C,UAAU,0BACVkB,GAAIA,IAEL,uBAAOC,QAASD,EAAIlB,UAAU,+BAC9B,mBAAGA,UAAU,aAAb,SAA2B6B,IAC3B,qBAAK3B,IAAK0C,EAAOxC,QArBG,WACrB,IAAMyC,EAAerC,EAAKsC,QAAO,SAACL,GAAD,OAAUA,EAAKvB,KAAOA,KACvDT,EAAQoC,IAmBkCxC,IAAI,QAAQL,UAAU,qBCUnD+C,EA7CA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,WAAYxC,EAAoB,EAApBA,QAASD,EAAW,EAAXA,KACvC0C,EAASC,iBAAO,MAChBC,EAAYD,iBAAO,MACnBE,EAAeF,iBAAO,MAEtBG,EAAU,CAACJ,EAAQE,EAAWC,GAE9B1D,EAAe,SAAC2B,GACM,QAAvBA,EAAEC,OAAOgC,WAAqBN,EAAW,OAClB,WAAvB3B,EAAEC,OAAOgC,WAAwBN,EAAW,UACrB,cAAvB3B,EAAEC,OAAOgC,WAA2BN,EAAW,aAEnDO,EAAclC,IAGTkC,EAAgB,SAAClC,GACtBgC,EAAQd,SAAQ,SAACiB,GAAD,OAASA,EAAIC,QAAQ5D,UAAU6D,OAAO,aACtDrC,EAAEC,OAAOzB,UAAU8D,IAAI,WAOxB,OACC,sBAAK5D,UAAU,SAAf,UACC,oBAAGA,UAAU,gBAAb,UAA8BgD,EAA9B,iBACA,sBAAKhD,UAAU,iBAAf,UACC,wBAAQA,UAAU,kCAAkCI,QAAST,EAAcyC,IAAKc,EAAhF,iBAGA,wBAAQlD,UAAU,6BAA6BI,QAAST,EAAcyC,IAAKgB,EAA3E,oBAGA,wBAAQpD,UAAU,gCAAgCI,QAAST,EAAcyC,IAAKiB,EAA9E,0BAID,wBAAQrD,UAAU,oBAAoBI,QAlBjB,WACtBK,EAAQD,EAAKsC,QAAO,SAACL,GAAD,OAA6B,IAAnBA,EAAKX,eAiBlC,iCC7BY+B,EATA,WACd,OACC,sBAAK7D,UAAU,SAAf,UACC,sBAAMA,UAAU,gCAAhB,sBACA,sBAAMA,UAAU,0BAAhB,qBACA,sBAAMA,UAAU,mCAAhB,6BCJY8D,EAHF,WACZ,OAAO,mBAAG9D,UAAU,OAAb,4CC0GO+D,G,MAhGH,WACX,MAAwBnD,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaC,EAAb,KACA,EAAkCG,oBAAS,GAA3C,mBAAOF,EAAP,KAAkBC,EAAlB,KACA,EAA8BC,mBAAS,OAAvC,mBAAOoD,EAAP,KAAgBf,EAAhB,KACA,EAAwCrC,mBAAS,IAAjD,mBAAOiC,EAAP,KAAqBoB,EAArB,KACA,EAA0BrD,mBAAS,IAAnC,mBAAOnB,EAAP,KAAcC,EAAd,KAGAwE,qBAAU,YCdY,SAACzD,EAASf,GAChC,IAAMyE,EAAYC,aAAaC,QAAQ,QACjCC,EAAaF,aAAaC,QAAQ,SACxC5D,EAAQ8D,KAAKC,MAAML,IAAc,IACjCzE,EAAS6E,KAAKC,MAAMF,IAAe,IDWlCG,CAAQhE,EAASf,KACf,IAGHwE,qBAAU,YCxBS,SAAC1D,EAAMf,GAC1B2E,aAAaM,QAAQ,OAAQH,KAAKI,UAAUnE,IAC5C4D,aAAaM,QAAQ,QAASH,KAAKI,UAAUlF,IDuB5CmF,CAAKpE,EAAMf,KACT,CAACe,EAAMf,IAGVyE,qBAAU,WACO,IAAhB1D,EAAKqE,QAAgBlE,GAAa,KAChC,CAACH,IAGJsE,mBAAQ,WACP,IAAMC,EAAQvE,EAAKwE,KAAI,SAACvC,GACvB,MAAO,CACNvB,GAAIuB,EAAKvB,GACTW,KAAMY,EAAKZ,KACXC,UAAWpB,MAGbD,EAAQsE,KACN,CAACrE,IAEJwD,qBAAU,WACG,QAAZF,GAAqBC,EAAgBzD,EAAKwE,KAAI,SAACvC,GAAD,OAAUA,MAC5C,WAAZuB,GAAwBC,EAAgBzD,EAAKsC,QAAO,SAACL,GAAD,OAA6B,IAAnBA,EAAKX,cACvD,cAAZkC,GAA2BC,EAAgBzD,EAAKsC,QAAO,SAACL,GAAD,OAA6B,IAAnBA,EAAKX,gBACpE,CAACkC,EAASxD,IAEb,IAAMyE,EAAYC,uBACjB,SAACC,GACA,IAAMC,EAAOD,EAAME,OAAOlD,MACpBmD,EAAOH,EAAMI,YAAYpD,MAC3BQ,EAAO,YAAOnC,GAClBmC,EAAQyC,GAAQ5E,EAAK8E,GACrB3C,EAAQ2C,GAAQ9E,EAAK4E,GACrB3E,EAAQkC,KAET,CAACnC,IAGF,OACC,sBAAKR,UAAU,YAAf,UACC,cAAC,EAAD,CAAQP,MAAOA,EAAOC,SAAUA,IAChC,cAAC,EAAD,CAAOgB,UAAWA,EAAWC,aAAcA,EAAcH,KAAMA,EAAMC,QAASA,IAC9E,cAAC,IAAD,CAAiBwE,UAAWA,EAA5B,SACC,sBAAKjF,UAAU,QAAf,UACC,cAAC,IAAD,CAAWwF,YAAY,cAAvB,SACE,SAACvD,EAAUwD,GAAX,OACA,8CACCzF,UAAU,uBACVoC,IAAKH,EAASI,UACVJ,EAASyD,gBAHd,cAKE7C,EAAagC,OACbhC,EAAamC,KAAI,SAACvC,EAAMN,GAAP,OAChB,cAAC,IAAD,CAAyBwD,YAAW,oBAAelD,EAAKvB,IAAMiB,MAAOA,EAArE,SACE,SAACF,EAAUwD,GAAX,OACA,cAAC,EAAD,CAECvE,GAAIuB,EAAKvB,GACTW,KAAMY,EAAKZ,KACXrB,KAAMA,EACNC,QAASA,EACTO,QAASyB,EAAKX,UACdG,SAAUA,GANLQ,EAAKvB,MAHGuB,EAAKvB,OAetB,cAAC,EAAD,IAEAe,EAASb,mBAIb,cAAC,EAAD,CAAQ4B,MAAOxC,EAAKqE,OAAQ5B,WAAYA,EAAYxC,QAASA,EAASD,KAAMA,SAG9E,cAAC,EAAD,SElGHoF,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDlG,SAASmG,eAAe,W","file":"static/js/main.b30eb28a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","import { useState } from 'react';\r\nimport sun from '../images/icon-sun.svg';\r\nimport moon from '../images/icon-moon.svg';\r\n\r\nconst Header = ({ theme, setTheme }) => {\r\n\tconst clickHandler = () => {\r\n\t\ttheme === '' ? setTheme('light') : setTheme('');\r\n\t\tdocument.body.classList.toggle('light');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<a href=\"https://www.github.com/ashiqfury\" className=\"link-to-fury\">\r\n\t\t\t\t<h1 className=\"header--text\">Todo</h1>\r\n\t\t\t</a>\r\n\t\t\t{theme === 'light' ? (\r\n\t\t\t\t<img src={moon} onClick={clickHandler} alt=\"Dark Theme\" className=\"header--toggler\" />\r\n\t\t\t) : (\r\n\t\t\t\t<img src={sun} onClick={clickHandler} alt=\"Dark Theme\" className=\"header--toggler\" />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","import React, { useState } from 'react';\r\n\r\nconst Input = ({ todo, setTodo, isChecked, setIsChecked }) => {\r\n\tconst [value, setValue] = useState(''); // input field values\r\n\tconst keyHandler = (e) => {\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tif (value.trim() === '') return setValue('');\r\n\t\t\tsetTodo([...todo, { id: Math.random() * 10000, text: value, completed: false }]);\r\n\t\t\tsetValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"input\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tchecked={isChecked}\r\n\t\t\t\tonChange={() => setIsChecked(!isChecked)}\r\n\t\t\t\tclassName=\"checkbox input--checkbox\"\r\n\t\t\t\tid=\"input--checkbox\"\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"input--checkbox\" className=\"input--label checkbox-label\" />\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tclassName=\"text input--text\"\r\n\t\t\t\tplaceholder=\"Create a new todo...\"\r\n\t\t\t\tspellCheck=\"false\"\r\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\r\n\t\t\t\tonKeyDown={keyHandler}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tautoFocus\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","export default __webpack_public_path__ + \"static/media/icon-cross.6ee81d30.svg\";","import close from '../images/icon-cross.svg';\r\n\r\nconst Task = ({ id, text, todo, setTodo, checked, provided }) => {\r\n\tlet toggler = checked;\r\n\tlet index = -1;\r\n\tconst completedHandler = () => {\r\n\t\ttoggler = !checked;\r\n\r\n\t\ttodo.forEach((task, i) => {\r\n\t\t\tif (task.id === id) index = i;\r\n\t\t});\r\n\t\tconst dupTodo = [...todo];\r\n\t\tdupTodo[index] = { id, text, completed: toggler };\r\n\t\tsetTodo(dupTodo);\r\n\t};\r\n\r\n\tconst deleteHandler = () => {\r\n\t\tconst filteredTodo = todo.filter((task) => task.id !== id);\r\n\t\tsetTodo(filteredTodo);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"task\"\r\n\t\t\tref={provided.innerRef}\r\n\t\t\t{...provided.draggableProps}\r\n\t\t\t{...provided.dragHandleProps}\r\n\t\t>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tchecked={toggler}\r\n\t\t\t\tonChange={completedHandler}\r\n\t\t\t\tclassName=\"checkbox task--checkbox\"\r\n\t\t\t\tid={id}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor={id} className=\"task--label checkbox-label\" />\r\n\t\t\t<p className=\"task--text\">{text}</p>\r\n\t\t\t<img src={close} onClick={deleteHandler} alt=\"close\" className=\"task--close\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","import React, { useRef } from 'react';\r\n\r\nconst Footer = ({ count, setFilters, setTodo, todo }) => {\r\n\tconst allBtn = useRef(null);\r\n\tconst activeBtn = useRef(null);\r\n\tconst completedBtn = useRef(null);\r\n\r\n\tconst allBtns = [allBtn, activeBtn, completedBtn];\r\n\r\n\tconst clickHandler = (e) => {\r\n\t\tif (e.target.innerHTML === 'All') setFilters('all');\r\n\t\tif (e.target.innerHTML === 'Active') setFilters('active');\r\n\t\tif (e.target.innerHTML === 'Completed') setFilters('completed');\r\n\r\n\t\tactiveChanger(e);\r\n\t};\r\n\r\n\tconst activeChanger = (e) => {\r\n\t\tallBtns.forEach((btn) => btn.current.classList.remove('active'));\r\n\t\te.target.classList.add('active');\r\n\t};\r\n\r\n\tconst clearCompleted = () => {\r\n\t\tsetTodo(todo.filter((task) => task.completed === false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<p className=\"footer--count\">{count} items left</p>\r\n\t\t\t<div className=\"footer__filter\">\r\n\t\t\t\t<button className=\"footer__filter--all  btn active\" onClick={clickHandler} ref={allBtn}>\r\n\t\t\t\t\tAll\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"footer__filter--active btn\" onClick={clickHandler} ref={activeBtn}>\r\n\t\t\t\t\tActive\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"footer__filter--completed btn\" onClick={clickHandler} ref={completedBtn}>\r\n\t\t\t\t\tCompleted\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"footer--clear btn\" onClick={clearCompleted}>\r\n\t\t\t\tClear Completed\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","import React from 'react';\r\n\r\nconst NoTask = () => {\r\n\treturn (\r\n\t\t<div className=\"notask\">\r\n\t\t\t<span className=\"notask__text notask__text-top\">You have</span>\r\n\t\t\t<span className=\"notask__text--highlight\">No task</span>\r\n\t\t\t<span className=\"notask__text notask__text-bottom\">to complete</span>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default NoTask;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","const Drag = () => {\r\n\treturn <p className=\"drag\">Drag and drop to reorder list</p>;\r\n};\r\nexport default Drag;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Header from './components/Header';\r\nimport Input from './components/Input';\r\nimport Task from './components/Task';\r\nimport Footer from './components/Footer';\r\nimport NoTask from './components/NoTask';\r\nimport Drag from './components/Drag';\r\nimport './css/style.css';\r\nimport { save, retrive } from './localStorage';\r\n\r\nconst App = () => {\r\n\tconst [todo, setTodo] = useState([]); // List of all todos\r\n\tconst [isChecked, setIsChecked] = useState(false); // input field checkbox\r\n\tconst [filters, setFilters] = useState('all');\r\n\tconst [filteredTodo, setFilteredTodo] = useState([]);\r\n\tconst [theme, setTheme] = useState('');\r\n\r\n\t// retriving local storage data only once.\r\n\tuseEffect(() => {\r\n\t\tretrive(setTodo, setTheme);\r\n\t}, []);\r\n\r\n\t// saving data to localstorage everytime when data changes\r\n\tuseEffect(() => {\r\n\t\tsave(todo, theme);\r\n\t}, [todo, theme]);\r\n\r\n\t// if todo list is empty, then uncheck the checkbox in input component\r\n\tuseEffect(() => {\r\n\t\ttodo.length === 0 && setIsChecked(false);\r\n\t}, [todo]);\r\n\r\n\t// function for completed all checkbox\r\n\tuseMemo(() => {\r\n\t\tconst array = todo.map((task) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: task.id,\r\n\t\t\t\ttext: task.text,\r\n\t\t\t\tcompleted: isChecked,\r\n\t\t\t};\r\n\t\t});\r\n\t\tsetTodo(array);\r\n\t}, [isChecked]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfilters === 'all' && setFilteredTodo(todo.map((task) => task));\r\n\t\tfilters === 'active' && setFilteredTodo(todo.filter((task) => task.completed === false));\r\n\t\tfilters === 'completed' && setFilteredTodo(todo.filter((task) => task.completed === true));\r\n\t}, [filters, todo]);\r\n\r\n\tconst onDragEnd = useCallback(\r\n\t\t(param) => {\r\n\t\t\tconst srcI = param.source.index;\r\n\t\t\tconst desI = param.destination.index;\r\n\t\t\tlet dupTodo = [...todo];\r\n\t\t\tdupTodo[srcI] = todo[desI];\r\n\t\t\tdupTodo[desI] = todo[srcI];\r\n\t\t\tsetTodo(dupTodo);\r\n\t\t},\r\n\t\t[todo]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header theme={theme} setTheme={setTheme} />\r\n\t\t\t<Input isChecked={isChecked} setIsChecked={setIsChecked} todo={todo} setTodo={setTodo} />\r\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t<div className=\"tasks\">\r\n\t\t\t\t\t<Droppable droppableId=\"droppable-1\">\r\n\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"draggable--container\"\r\n\t\t\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{filteredTodo.length ? (\r\n\t\t\t\t\t\t\t\t\tfilteredTodo.map((task, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<Draggable key={task.id} draggableId={`draggable-${task.id}`} index={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={task.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext={task.text}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTodo={setTodo}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={task.completed}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprovided={provided}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<NoTask />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t<Footer count={todo.length} setFilters={setFilters} setTodo={setTodo} todo={todo} />\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t\t<Drag />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","export const save = (todo, theme) => {\r\n\tlocalStorage.setItem('Todo', JSON.stringify(todo));\r\n\tlocalStorage.setItem('Theme', JSON.stringify(theme));\r\n};\r\n\r\nexport const retrive = (setTodo, setTheme) => {\r\n\tconst localTodo = localStorage.getItem('Todo');\r\n\tconst localTheme = localStorage.getItem('Theme');\r\n\tsetTodo(JSON.parse(localTodo) || []);\r\n\tsetTheme(JSON.parse(localTheme) || '');\r\n};\r\n\r\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n/***************************** Ashiq Fury : --> https://github.com/ashiqfury ****************************************/\n"],"sourceRoot":""}